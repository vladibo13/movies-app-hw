{"version":3,"sources":["components/movie-search/index.tsx","redux/actions.config.ts","redux/actions.ts","components/movie/index.tsx","components/movie-loader/index.tsx","components/movies-list/index.tsx","components/movies-page/index.tsx","components/movie-home/index.tsx","components/movie-navbar/index.tsx","components/movie-detail/index.tsx","components/movie-feedback/index.tsx","components/movie-comments/index.tsx","components/movies-favorite/index.tsx","App.tsx","serviceWorker.ts","redux/reducers.ts","redux/store.js","index.tsx"],"names":["MovieSearch","props","handleFormInput","e","setState","target","name","value","handleOnClick","preventDefault","movieSearch","state","searchTerm","className","this","type","placeholder","onChange","onClick","React","Component","ADD_COMMENT","ADD_MOVIE_FAVORITE","GET_MOVIES","GET_MOVIES_PENDING","GET_MOVIES_SUCCESS","GET_MOVIES_STARTED","GET_SINGLE_MOVIE","saveMovieComment","comment","ACTIONS","payload","getSingleMovieAction","movie","getMoviesSuccessAction","movies","getMovieStartedAction","Movie","addMovieFavorite","console","log","Title","Poster","Year","imdbID","Type","addMovieToFavorite","reduxAction","src","alt","to","style","cursor","connect","dispatch","saveMovieToFavorite","MovieLoader","role","width","height","MoviesList","isLoading","length","map","key","MoviesPage","onSearchMovies","url","axios","get","then","result","data","Search","catch","MovieHome","MovieNavbar","MovieDetail","match","params","onSingleMovie","currentMovie","Production","Released","Plot","Actors","Writer","getSingleMovie","MovieFeedback","handleMovieCommentChange","handleMovieCommentSave","onSaveMovieComment","MovieComments","comments","index","newComment","MoviesFavorite","favorites","App","exact","path","component","Boolean","window","location","hostname","initialState","compose","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","action","Actions","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eead1ff9.chunk.js","sourcesContent":["import React from 'react';\n\nclass MovieSearch extends React.Component<any, any> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = { searchTerm: '' };\n\t}\n\thandleFormInput = (e: any) => {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t};\n\thandleOnClick = (e: any) => {\n\t\te.preventDefault();\n\t\tconst { movieSearch } = this.props;\n\t\tconst { searchTerm } = this.state;\n\t\tmovieSearch(searchTerm);\n\t\tthis.setState({ searchTerm: '' });\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<form>\n\t\t\t\t<div className=\"input-group w-75 mx-auto\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={this.state.searchTerm}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tplaceholder=\"Movie Search\"\n\t\t\t\t\t\tname=\"searchTerm\"\n\t\t\t\t\t\tonChange={this.handleFormInput}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className=\"input-group-append\">\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-outline-primary \" onClick={this.handleOnClick}>\n\t\t\t\t\t\t\tSearch Movie\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default MovieSearch;\n","export default {\n\tADD_COMMENT: 'ADD_COMMENT',\n\tADD_MOVIE_FAVORITE: 'ADD_MOVIE_FAVORITE',\n\tGET_MOVIES: 'GET_MOVIES_ACTION',\n\tGET_MOVIES_PENDING: 'GET_MOVIES_PENDING',\n\tGET_MOVIES_SUCCESS: 'GET_MOVIES_SUCCESS',\n\tGET_MOVIES_STARTED: 'GET_MOVIES_STARTED',\n\tGET_SINGLE_MOVIE: 'GET_SINGLE_MOVIE'\n};\n","import ACTIONS from './actions.config';\n// import Service from './service';\nimport axios from 'axios';\nconst APIKEY = 'e3f08a46';\n\nexport const getSingleMovie = (imdbID: string) => {\n\treturn (dispatch: any) => {\n\t\tconst url = `https://www.omdbapi.com/?apikey=${APIKEY}&i=${imdbID}`;\n\n\t\taxios.get(url).then((result: any) => {\n\t\t\tdispatch(getSingleMovieAction(result.data));\n\t\t});\n\t};\n};\n\nexport const getMoviesAction = (searchTerm: any) => {\n\tconsole.log('dispatching...');\n\treturn (dispatch: any) => {\n\t\tconst url = `https://www.omdbapi.com/?apikey=${APIKEY}&s=${searchTerm}`;\n\n\t\tdispatch(getMovieStartedAction());\n\t\taxios\n\t\t\t.get(url)\n\t\t\t.then((result: any) => {\n\t\t\t\tconsole.log(result);\n\t\t\t\tdispatch(getMoviesSuccessAction(result.data.Search));\n\t\t\t})\n\t\t\t.catch((e) => console.log(e));\n\t};\n};\n\nexport const saveMovieComment = (comment: any) => ({\n\ttype: ACTIONS.ADD_COMMENT,\n\tpayload: { comment }\n});\n\nexport const saveMovieToFavorite = (movie: any) => ({\n\ttype: ACTIONS.ADD_MOVIE_FAVORITE,\n\tpayload: { movie }\n});\n\nexport const getSingleMovieAction = (movie: any) => ({\n\ttype: ACTIONS.GET_SINGLE_MOVIE,\n\tpayload: { movie }\n});\n\nexport const getMoviesSuccessAction = (movies: any) => ({\n\ttype: ACTIONS.GET_MOVIES_SUCCESS,\n\tpayload: { movies }\n});\n\nexport const getMovieStartedAction = () => ({\n\ttype: ACTIONS.GET_MOVIES_STARTED\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { saveMovieToFavorite } from '../../redux/actions';\n\nclass Movie extends React.Component<any, any> {\n\taddMovieFavorite = () => {\n\t\tconsole.log(this.props);\n\t\tconst { Title, Poster, Year, imdbID, Type } = this.props;\n\t\tconst { addMovieToFavorite } = this.props.reduxAction;\n\t\taddMovieToFavorite({ Title, Poster, Year, imdbID, Type });\n\t};\n\trender() {\n\t\tconst { Title, Poster, Year, imdbID, Type } = this.props;\n\t\tconsole.log(Title);\n\t\treturn (\n\t\t\t<div className=\"col-sm-6 col-md-4 col-lg-3 my-3 \">\n\t\t\t\t<div className=\"card shadow rounded\">\n\t\t\t\t\t<img src={Poster} alt={Title + Type} className=\"card-img-top\" />\n\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t<h5 className=\"card-title\">\n\t\t\t\t\t\t\t<span className=\"lead\">Title - </span> {Title}\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t<p className=\"card-text\">Year - {Year}</p>\n\t\t\t\t\t\t<p className=\"card-text\">Type - {Type}</p>\n\t\t\t\t\t\t<p className=\"card-text\">imdbID - {imdbID}</p>\n\t\t\t\t\t\t<Link to={`/movie/${imdbID}`}>Movie Detail</Link>\n\t\t\t\t\t\t<button onClick={this.addMovieFavorite} className=\"btn btn-outline-info\">\n\t\t\t\t\t\t\tAdd To Favorite\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<i style={{ cursor: 'pointer' }} className=\"icon ion-md-star-outline\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\treduxAction: {\n\t\t\taddMovieToFavorite: (movie: any) => {\n\t\t\t\tdispatch(saveMovieToFavorite(movie));\n\t\t\t}\n\t\t}\n\t};\n};\n\nconst mapStateToProps = (state: any) => {\n\treturn state;\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);\n","import React from 'react';\n\nclass MovieLoader extends React.Component<any, any> {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"spinner-border mt-5 text-primary\"\n\t\t\t\t\trole=\"status\"\n\t\t\t\t\tstyle={{ width: '15rem', height: '15rem' }}\n\t\t\t\t>\n\t\t\t\t\t<span className=\"sr-only\">Loading...</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MovieLoader;\n","import React from 'react';\nimport Movie from '../movie';\nimport MovieLoader from '../movie-loader';\n\nclass MoviesList extends React.Component<any, any> {\n\trender() {\n\t\tconst { movies, isLoading } = this.props;\n\t\tif (movies.length === 0) return <h3 className=\"text-center mt-3 lead \">Enter movie in the search bar </h3>;\n\t\tif (isLoading) return <MovieLoader />;\n\t\treturn <div className=\"row \">{movies.map((movie: any) => <Movie key={movie.imdbID} {...movie} />)}</div>;\n\t}\n}\n\nexport default MoviesList;\n","import React from 'react';\nimport MovieSearch from '../movie-search';\nimport MoviesList from '../movies-list';\nimport { connect } from 'react-redux';\nimport { getMoviesAction } from '../../redux/actions';\n\nclass MoviesPage extends React.Component<any, any> {\n\t// constructor(props: any) {\n\t// \tsuper(props);\n\t// \tthis.state = {\n\t// \t\tmovies: [],\n\t// \t\tisLoading: false\n\t// \t};\n\t// }\n\n\tmovieSearch = (searchTerm: any) => {\n\t\t// this.setState({ isLoading: true });\n\t\t// const url = `http://www.omdbapi.com/?apikey=${APIKEY}&s=${searchTerm}`;\n\t\t// axios\n\t\t// \t.get(url)\n\t\t// \t.then((result: any) => {\n\t\t// \t\tconsole.log(result.data.Search);\n\t\t// \t\tif (result.data.Search.length > 0)\n\t\t// \t\t\tthis.setState({ movies: [ ...this.state.movies, ...result.data.Search ], isLoading: false });\n\t\t// \t})\n\t\t// \t.catch((e) => console.log(e));\n\t\tconsole.log(searchTerm);\n\t\tthis.props.onSearchMovies(searchTerm);\n\t};\n\trender() {\n\t\tconsole.log(this.props);\n\t\tconst { movies, isLoading } = this.props;\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<h2 className=\"display-4 lead text-center my-5\">Movie App</h2>\n\t\t\t\t<MovieSearch movieSearch={this.movieSearch} />\n\t\t\t\t<MoviesList isLoading={isLoading} movies={movies} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tonSearchMovies: (movies: any) => {\n\t\t\tdispatch(getMoviesAction(movies));\n\t\t}\n\t};\n};\n\nfunction mapStateToProps(state: any) {\n\tconsole.log('state from redux');\n\treturn {\n\t\t...state\n\t};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesPage);\n\n// export default MoviesPage;\n","import React from 'react';\n\nclass MovieHome extends React.Component<any, any> {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1 className=\"text-center display-2 my-5 display-4\">Hello From Movie Home After Update</h1>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MovieHome;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass MovieNavbar extends React.Component<any, any> {\n\trender() {\n\t\treturn (\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">\n\t\t\t\t\t<i className=\"icon ion-md-videocam\" />\n\t\t\t\t</Link>\n\t\t\t\t<div className=\"collapse navbar-collapse\">\n\t\t\t\t\t<ul className=\"navbar-nav mr-auto\">\n\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/\">\n\t\t\t\t\t\t\t\tMovies Home\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/movies\">\n\t\t\t\t\t\t\t\tMovies Page\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/comments\">\n\t\t\t\t\t\t\t\tMovie Comments\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/feedback\">\n\t\t\t\t\t\t\t\tMovies Feedback\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/favorites\">\n\t\t\t\t\t\t\t\tFavorites\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t);\n\t}\n}\n\nexport default MovieNavbar;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getSingleMovie } from '../../redux/actions';\nimport axios from 'axios';\nconst APIKEY = 'e3f08a46';\nclass MovieDetail extends React.Component<any, any> {\n\t// constructor(props: any) {\n\t// \tsuper(props);\n\t// \tconsole.log(props.match.params.imdbID);\n\t// \tthis.state = { currentMovie: null };\n\t// }\n\n\tcomponentDidMount() {\n\t\tconst { imdbID } = this.props.match.params;\n\t\tthis.props.onSingleMovie(imdbID);\n\t\t// const url = `http://www.omdbapi.com/?apikey=${APIKEY}&i=${imdbID}`;\n\t\t// axios.get(url).then((result) => this.setState({ currentMovie: result.data })).catch((e) => console.log(e));\n\t}\n\trender() {\n\t\tconst { currentMovie } = this.props;\n\t\tif (!currentMovie) return <div>Loading...</div>;\n\t\treturn (\n\t\t\t<div className=\"container my-5\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-lg-6 offset-lg-3 \">\n\t\t\t\t\t\t<div className=\"card shadow rounded\">\n\t\t\t\t\t\t\t<img src={currentMovie.Poster} className=\"card-img-top\" alt={currentMovie.Poster} />\n\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t<h5 className=\"card-title\">\n\t\t\t\t\t\t\t\t\t{currentMovie.Title} - {currentMovie.Production} - {currentMovie.Released}\n\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t\t\t\t\t<u>Plot: </u>\n\t\t\t\t\t\t\t\t\t{currentMovie.Plot}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t\t\t\t\t<u>Actors: </u>\n\t\t\t\t\t\t\t\t\t{currentMovie.Actors}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p className=\"card-text\">\n\t\t\t\t\t\t\t\t\t<u>Writers: </u>\n\t\t\t\t\t\t\t\t\t{currentMovie.Writer}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n\treturn {\n\t\tonSingleMovie: (imdbID: any) => {\n\t\t\tdispatch(getSingleMovie(imdbID));\n\t\t}\n\t};\n};\n\nfunction mapStateToProps(state: any) {\n\tconsole.log('state from redux');\n\treturn {\n\t\t...state\n\t};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetail);\n\n// Actors: \"Robert Downey Jr., Chris Hemsworth, Mark Ruffalo, Chris Evans\"\n// Awards: \"N/A\"\n// BoxOffice: \"$664,987,816\"\n// Country: \"USA\"\n// DVD: \"14 Aug 2018\"\n// Director: \"Anthony Russo, Joe Russo\"\n// Genre: \"Action, Adventure, Sci-Fi\"\n// Language: \"English\"\n// Metascore: \"68\"\n// Plot: \"The Avengers and their allies must be willing to sacrifice all in an attempt to defeat the powerful Thanos before his blitz of devastation and ruin puts an end to the universe.\"\n// Poster: \"https://m.media-amazon.com/images/M/MV5BMjMxNjY2MDU1OV5BMl5BanBnXkFtZTgwNzY1MTUwNTM@._V1_SX300.jpg\"\n// Production: \"Walt Disney Pictures\"\n// Rated: \"PG-13\"\n// Ratings: (3) [{…}, {…}, {…}]\n// Released: \"27 Apr 2018\"\n// Response: \"True\"\n// Runtime: \"149 min\"\n// Title: \"Avengers: Infinity War\"\n// Type: \"movie\"\n// Website: \"http://marvel.com/movies/movie/223/avengers_infinity_war\"\n// Writer: \"Christopher Markus (screenplay by), Stephen McFeely (screenplay by), Stan Lee (based on the Marvel comics by), Jack Kirby (based on the Marvel comics by), Joe Simon (Captain America created by), Jack Kirby (Captain America created by), Steve Englehart (Star-Lord created by), Steve Gan (Star-Lord created by), Bill Mantlo (Rocket Raccoon created by), Keith Giffen (Rocket Raccoon created by), Jim Starlin (Thanos,  Gamora and Drax created by), Stan Lee (Groot created by), Larry Lieber (Groot created by), Jack Kirby (Groot created by), Steve Englehart (Mantis created by), Don Heck (Mantis created by)\"\n// Year: \"2018\"\n// imdbID: \"tt4154756\"\n// imdbRating: \"8.5\"\n// imdbVotes: \"706,537\"\n","import React from 'react';\nimport { saveMovieComment } from '../../redux/actions';\nimport { connect } from 'react-redux';\n\nclass MovieFeedback extends React.Component<any, any> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcomment: ''\n\t\t};\n\t}\n\thandleMovieCommentChange = (e: any) => {\n\t\tconsole.log(this.state.comment);\n\t\tthis.setState({ comment: e.target.value });\n\t};\n\n\thandleMovieCommentSave = () => {\n\t\tconst { onSaveMovieComment } = this.props;\n\t\tonSaveMovieComment(this.state.comment);\n\t\tthis.setState({ comment: '' });\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-6 offset-3 my-5\">\n\t\t\t\t\t\t<h2 className=\"display-4 text-center my-5\">Moovies Feedback</h2>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tvalue={this.state.comment}\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tstyle={{ height: 200 }}\n\t\t\t\t\t\t\t\tonChange={this.handleMovieCommentChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={this.handleMovieCommentSave}\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary btn-lg\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n\t// return {};\n\treturn {\n\t\tonSaveMovieComment: (movie: any) => {\n\t\t\tconsole.log('movie = ' + movie);\n\t\t\tdispatch(saveMovieComment(movie));\n\t\t}\n\t};\n}\n\nfunction mapStateToProps(state: any) {\n\tconsole.log('state from redux');\n\treturn {\n\t\t...state\n\t};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieFeedback);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass MovieComments extends React.Component<any, any> {\n\trender() {\n\t\tconst { comments } = this.props;\n\t\tconsole.log(comments);\n\t\tif (comments.length === 0) return <h1 className=\"text-center mt-3 display-4\">No Comments</h1>;\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-6 offset-3 my-5\">\n\t\t\t\t\t\t{comments.map((comment: any, index: any) => (\n\t\t\t\t\t\t\t<p className=\"shadow p-5\" key={index}>\n\t\t\t\t\t\t\t\t{comment.newComment}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n\treturn {};\n\t// return {\n\t// \tonSaveMovieComment: (user: any) => {\n\t// \t\tdispatch(saveMovieComment(user));\n\t// \t}\n\t// };\n}\n\nconst mapStateToProps = (state: any) => {\n\tconsole.log('state from redux');\n\treturn {\n\t\t...state\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieComments);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass MoviesFavorite extends React.Component<any, any> {\n\trender() {\n\t\tconst { favorites } = this.props;\n\t\t// Title, Poster, Year, imdbID, Type\n\t\tif (favorites.length === 0) return <h1 className=\"text-center mt-3 display-4\">No Favorites</h1>;\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{favorites.map((movie: any) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div className=\"col-sm-6 col-md-4 col-lg-3 my-3\">\n\t\t\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={movie.Poster} />\n\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t\t\t<p className=\"card-text\">{movie.Title}</p>\n\t\t\t\t\t\t\t\t\t\t<p className=\"card-text\">{movie.Year}</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapDispatchToProps(dispatch: any) {\n\treturn {};\n\t// return {\n\t// \tonSaveMovieComment: (user: any) => {\n\t// \t\tdispatch(saveMovieComment(user));\n\t// \t}\n\t// };\n}\n\nconst mapStateToProps = (state: any) => {\n\tconsole.log('state from redux');\n\treturn {\n\t\t...state\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesFavorite);\n","import React from 'react';\nimport MoviesPage from './components/movies-page';\nimport MovieHome from './components/movie-home';\nimport MovieNavbar from './components/movie-navbar';\nimport MovieDetail from './components/movie-detail';\nimport MovieFeedback from './components/movie-feedback';\nimport MovieComments from './components/movie-comments';\nimport MoviesFavorite from './components/movies-favorite';\nimport { Route, Switch } from 'react-router-dom';\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<div>\n\t\t\t<MovieNavbar />\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={MovieHome} />\n\t\t\t\t<Route exact path=\"/movies\" component={MoviesPage} />\n\t\t\t\t<Route exact path=\"/favorites\" component={MoviesFavorite} />\n\t\t\t\t<Route exact path=\"/movie/:imdbID\" component={MovieDetail} />\n\t\t\t\t<Route exact path=\"/feedback\" component={MovieFeedback} />\n\t\t\t\t<Route exact path=\"/comments\" component={MovieComments} />\n\t\t\t</Switch>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Actions from './actions.config';\nimport moviesFavorite from '../components/movies-favorite';\n\nconst initialState = {\n\tcomments: [],\n\tfavorites: [],\n\tmovies: [],\n\tisLoading: false,\n\tcurrentMovie: null\n};\n\nexport default function root(state = initialState, action: any) {\n\tswitch (action.type) {\n\t\tcase Actions.ADD_COMMENT: {\n\t\t\tconsole.log(state);\n\n\t\t\tconst newComment = action.payload.comment;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcomments: [ ...state.comments, { newComment } ]\n\t\t\t};\n\t\t}\n\n\t\tcase Actions.ADD_MOVIE_FAVORITE: {\n\t\t\tconst { movie } = action.payload;\n\t\t\tconst { favorites } = state;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfavorites: [ ...favorites, movie ]\n\t\t\t};\n\t\t}\n\n\t\tcase Actions.GET_MOVIES_SUCCESS: {\n\t\t\tconst { movies: data } = action.payload;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: false,\n\t\t\t\tmovies: [ ...data ]\n\t\t\t};\n\t\t}\n\n\t\tcase Actions.GET_MOVIES_STARTED: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: true\n\t\t\t};\n\t\t}\n\n\t\tcase Actions.GET_SINGLE_MOVIE: {\n\t\t\tconst { movie } = action.payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentMovie: movie\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport root from './reducers';\nconst compose = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(root, compose(applyMiddleware(thunk)));\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}